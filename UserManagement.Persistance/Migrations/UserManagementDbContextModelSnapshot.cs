// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace UserManagement.Persistance.Migrations
{
    [DbContext(typeof(UserManagementDbContext))]
    partial class UserManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cf20903c-06ca-4bf1-9ed6-a254a65baaa2"),
                            Email = "User@gmail.com",
                            Password = "$2a$11$5kp.Uhs1BH.WFNRLibuwQOfWHdWu/nSkquqag4EpMQkG/ZOjeWKa.",
                            Status = 0,
                            UserName = "User"
                        },
                        new
                        {
                            Id = new Guid("97de980e-01cb-47b7-8609-a0aecd995c1f"),
                            Email = "Admin@gmail.com",
                            Password = "$2a$11$0WxXp0R2wS/.Y1m1MEFlpO32Yfm5aHV0Ni7pFN0NK1INSvC0usPkK",
                            Status = 0,
                            UserName = "Admin"
                        });
                });

            modelBuilder.Entity("UserManagement.Domain.Roles.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("91f900f6-c656-4793-b13b-bf627c6665f5"),
                            RoleName = "User"
                        },
                        new
                        {
                            Id = new Guid("1a9ea18e-c88e-490b-b95e-6b499338f91d"),
                            RoleName = "Admin"
                        });
                });

            modelBuilder.Entity("UserManagement.Domain.UserRoles.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleId = new Guid("91f900f6-c656-4793-b13b-bf627c6665f5"),
                            UserId = new Guid("cf20903c-06ca-4bf1-9ed6-a254a65baaa2")
                        },
                        new
                        {
                            Id = 2,
                            RoleId = new Guid("1a9ea18e-c88e-490b-b95e-6b499338f91d"),
                            UserId = new Guid("97de980e-01cb-47b7-8609-a0aecd995c1f")
                        });
                });

            modelBuilder.Entity("UserManagement.Domain.UserRoles.UserRole", b =>
                {
                    b.HasOne("UserManagement.Domain.Roles.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("UserManagement.Domain.Roles.Role", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
